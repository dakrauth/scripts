[alias]
    hist = log --pretty=tformat:'%h %ad | %s%d [%an]' --graph --date=short
    alias = config --get-regexp alias
    br = branch
    brv = "!f() { git branch --sort=-creatordate --color=always --format='%(color:reset)%(creatordate:short) %(color:bold white)%(align:2,right)%(upstream:trackshort)%(end)%(color:nobold) %(align:50,left)%(color:yellow)%(refname:short) %(color:red)[%(authorname)] %(end) %(color:reset)%(contents:subject)'; }; f"
    brvr = "!f() { git branch -r --sort=-creatordate --color=always --format='%(color:reset)%(creatordate:short) %(color:bold white)%(align:2,right)%(upstream:trackshort)%(end)%(color:nobold) %(align:60,left)%(color:yellow)%(refname:short) %(color:red)[%(authorname)] %(end) %(color:reset)%(contents:subject)'; }; f"
    changed = diff --name-only --diff-filter=ACMRTUXB
    ci = commit
    cia = commit -a
    ciam = commit -a -m
    co = checkout
    discard = checkout --
    dump = cat-file -p
    history = log -p --
    last = log -1 HEAD
    ll = log --abbrev-commit --graph --pretty=tformat:'%Cred%h%Creset %s %C(bold magenta)<%an>%Creset %C(green)%cr%Creset%C(yellow)%d%Creset'
    ls = log --abbrev-commit --graph --decorate --pretty=oneline
    lg = log --abbrev-commit --graph --pretty=tformat:'%Cred%h%Creset %s %C(bold magenta)<%an>%Creset %C(yellow)%d%Creset'
    mergeff = merge --ff-only
    pullf = pull --ff-only
    pullr = pull --rebase=true
    pushf = push --force-with-lease
    pushup = push -u origin
    refresh = remote update origin --prune
    root = "!f() { cd "$(git rev-parse --show-toplevel)"; pwd; }; f"
    showbrs = for-each-ref --color --sort=authorname --ignore-case --format="%(authorname)%20%(authoremail):%20%(color:yellow)%(refname:lstrip=3)%(color:reset)%20@%20%(objectname:short)%20[%(authordate:iso)%20-%20%(color:red)%(authordate:relative)%(color:reset)]%20%(subject)" refs/remotes
    st = status
    touched = "!f() { git --no-pager diff --name-only | grep "\\.py$"; }; f"
    cached = "!f() { git --no-pager diff --cached --name-only | grep "\\.py$"; }; f"
    type = cat-file -t
    undo = reset --soft HEAD~1
    unstage = restore --staged
    # Show how your git local branch and its upstream diverge
    # See https://twitter.com/nedbat/status/1017432899967160321?s=11
    y = log --oneline --graph HEAD @{u} $(git merge-base HEAD @{u})^!
[branch "master"]
    mergeoptions = --ff-only
[branch "main"]
    mergeoptions = --ff-only
[branch "develop"]
    mergeoptions = --ff-only
[color]
    ui = true
[color "branch"]
    current = green bold
    local = yellow bold
    remote = magenta
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = white red bold
    new = white green bold
    whitespace = white reverse
[color "status"]
    added = green bold
    changed = yellow bold
    untracked = cyan bold
    branch = magenta bold
    unmerged = red yellow bold
[core]
    autocrlf = input
	excludesfile = /Users/david/.gitignore_global
    pager = bat
    #pager = cat
[credential]
    helper = osxkeychain
[diff]
    tool = Kaleidoscope
[difftool]
    prompt = false
[difftool "Kaleidoscope"]
    cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"
[difftool "sourcetree"]
	cmd = /usr/local/bin/ksdiff -w \"$LOCAL\" \"$REMOTE\"
	path = 
[merge]
    keepBackup = false
    tool = Kaleidoscope
    ff = only
[mergetool]
    prompt = false
[mergetool "Kaleidoscope"]
    cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
    trustexitcode = true
[mergetool "sourcetree"]
	cmd = /usr/local/bin/ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
	trustExitCode = true
[pager]
    branch = false
[pull]
    rebase = true
[push]
    # Push current branch (and ONLY current branch) even if you've never pushed it before.
    default = current
	autoSetupRemote = true
[rebase]
    autosquash = true
[user]
	name = David Krauth
	email = dakrauth@gmail.com
[init]
	defaultBranch = main
